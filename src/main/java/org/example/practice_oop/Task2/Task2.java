package org.example.practice_oop.Task2;
import org.example.practice_oop.Task2.Line;
import org.example.practice_oop.Task2.Point;

/*
 Практика ООП. Объекты и классы #2. Линия
Создайте класс Линия (Line), расположенную на двумерной плоскости, которая описывается:

Координата начала: Точка
Координата конца: Точка
Создается одним из следующих способов:
с указанием двух Точек
с указанием четырех целых чисел (x y начала и x y конца)
Может возвращать текстовое представление вида “Линия от {X1;Y1} до {X2;Y2}”
Может вернуть длину Линии. Для расчёта длины следует использовать формулу расчёта гипотенузы: корень суммы квадратов катетов. Для извлечения корня можно использовать Math.sqrt.  
Под Точкой имеется ввиду класс, созданный в задании 1 (точка координат).

Создайте три объекта Линии таким образом, чтобы:

Линия 1 начиналась в Точке  {1;3} и кончалась в Точке {5;8}.
Линия 2 начиналась в Точке {10;11} и кончалась в Точке {15;19}
Линия 3 начиналась в Точке конца Линии 1, а кончалась в Точке начала Линии 2
Используя эти объекты, выполните следующее:

Выведите текстовое представление Линии 3 на экран
Измените координаты точек начала и конца Линии 3 таким образом, чтобы изменились все три объекта Линии
Выведите текстовое представление Линии 3 на экран после изменения её состояния
Рассчитайте суммарную длину всех трех линий и выведите её на экран
Подсказка:

·       текстовое представление объекта лучше реализовывать в переопределенном методе toString().

·       наименование метода расчета длины линии - getLength
 */
public class Task2 {
    public static void main(String[] args) {
        // Создаём Линию 1 с двумя точками
        Point p1 = new Point(1, 3);
        Point p2 = new Point(5, 8);
        Line line1 = new Line(p1, p2);

        // Линия 2 с четырьмя координатами
        Line line2 = new Line(10, 11, 15, 19);

        // Линия 3 начинается в конце Линии 1 и заканчивается в начале Линии 2
        Line line3 = new Line(line1.getEnd(), line2.getStart());

        // Вывести текстовое представление Линии 3
        System.out.println(line3);

        // Изменяем координаты точек начала и конца Линии 3
        // Поскольку у Линии 3 start и end — это точки Line1.end и Line2.start (одни и те же объекты),
        // изменения будут отражены во всех трех линиях.

        line3.getStart().setX(7);
        line3.getStart().setY(7);

        line3.getEnd().setX(20);
        line3.getEnd().setY(20);

        // Вывести текстовое представление Линии 3 после изменений
        System.out.println(line3);

        // Рассчитать суммарную длину всех трех линий
        double totalLength = line1.getLength() + line2.getLength() + line3.getLength();
        System.out.printf("Суммарная длина всех трех линий: %.2f\n", totalLength);
    }
}

